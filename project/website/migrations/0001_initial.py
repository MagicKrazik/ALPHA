# Generated by Django 5.1.2 on 2025-08-08 07:54

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AlertRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre de la Regla')),
                ('description', models.TextField(verbose_name='Descripción')),
                ('rule_type', models.CharField(choices=[('threshold', 'Umbral'), ('combination', 'Combinación'), ('trend', 'Tendencia'), ('ml_prediction', 'Predicción ML')], max_length=20)),
                ('rule_config', models.JSONField(help_text='JSON con la configuración específica de la regla', verbose_name='Configuración de la Regla')),
                ('is_active', models.BooleanField(default=True)),
                ('priority', models.IntegerField(default=1, help_text='1=Máxima, 5=Mínima')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Regla de Alerta',
                'verbose_name_plural': 'Reglas de Alerta',
                'ordering': ['priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='nombre')),
                ('email', models.EmailField(max_length=254, verbose_name='correo electrónico')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='teléfono')),
                ('subject', models.CharField(choices=[('general', 'Consulta General'), ('technical', 'Soporte Técnico'), ('collaboration', 'Propuesta de Colaboración'), ('other', 'Otro')], max_length=20, verbose_name='asunto')),
                ('message', models.TextField(verbose_name='mensaje')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='fecha de envío')),
                ('is_read', models.BooleanField(default=False, verbose_name='leído')),
            ],
            options={
                'verbose_name': 'Mensaje de Contacto',
                'verbose_name_plural': 'Mensajes de Contacto',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RiskFactor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre del Factor')),
                ('category', models.CharField(choices=[('airway', 'Vía Aérea'), ('cardiac', 'Cardiovascular'), ('respiratory', 'Respiratorio'), ('metabolic', 'Metabólico'), ('general', 'General')], max_length=20)),
                ('description', models.TextField(verbose_name='Descripción')),
                ('severity_level', models.CharField(choices=[('low', 'Bajo'), ('medium', 'Moderado'), ('high', 'Alto'), ('critical', 'Crítico')], max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Factor de Riesgo',
                'verbose_name_plural': 'Factores de Riesgo',
            },
        ),
        migrations.CreateModel(
            name='MedicoUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(error_messages={'unique': 'Ya existe un usuario con este nombre.'}, help_text='Requerido. 150 caracteres o menos. Letras, números, puntos y guiones bajos solamente.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='usuario')),
                ('email', models.EmailField(error_messages={'unique': 'Ya existe un usuario con este correo electrónico.'}, max_length=254, unique=True, verbose_name='email address')),
                ('nombre', models.CharField(help_text='Nombres del médico', max_length=100, verbose_name='nombre')),
                ('apellidos', models.CharField(help_text='Apellidos del médico', max_length=100, verbose_name='apellidos')),
                ('telefono', models.CharField(help_text='Número de contacto del médico', max_length=17, verbose_name='teléfono')),
                ('especialidad', models.CharField(choices=[('ANE', 'Anestesiología'), ('ANP', 'Anestesiología Pediátrica'), ('MEC', 'Medicina Crítica'), ('MED', 'Medicina del Dolor'), ('OTR', 'Otra Especialidad')], default='ANE', max_length=3, verbose_name='especialidad')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'médico',
                'verbose_name_plural': 'médicos',
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id_paciente', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID Paciente')),
                ('nombres', models.CharField(max_length=100, verbose_name='Nombres')),
                ('apellidos', models.CharField(max_length=100, verbose_name='Apellidos')),
                ('fecha_nacimiento', models.DateField(verbose_name='Fecha de Nacimiento')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Correo electrónico')),
                ('telefono', models.CharField(blank=True, max_length=15, null=True, verbose_name='Teléfono')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Registro')),
                ('ultima_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('aceptacion_privacidad', models.BooleanField(default=False, verbose_name='Aceptación de Política de Privacidad')),
            ],
            options={
                'verbose_name': 'Paciente',
                'verbose_name_plural': 'Pacientes',
                'ordering': ['-fecha_registro'],
                'indexes': [models.Index(fields=['nombres', 'apellidos'], name='website_pat_nombres_d9073d_idx'), models.Index(fields=['fecha_nacimiento'], name='website_pat_fecha_n_e5a449_idx'), models.Index(fields=['fecha_registro'], name='website_pat_fecha_r_e21f95_idx')],
            },
        ),
        migrations.CreateModel(
            name='RiskAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('preventive', 'Preventiva'), ('warning', 'Advertencia'), ('critical', 'Crítica'), ('informational', 'Informativa')], max_length=20)),
                ('status', models.CharField(choices=[('active', 'Activa'), ('acknowledged', 'Reconocida'), ('resolved', 'Resuelta'), ('dismissed', 'Descartada')], default='active', max_length=20)),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('message', models.TextField(verbose_name='Mensaje')),
                ('risk_score', models.FloatField(blank=True, null=True)),
                ('confidence_level', models.FloatField(blank=True, null=True)),
                ('recommendations', models.JSONField(blank=True, null=True, verbose_name='Recomendaciones')),
                ('triggered_at', models.DateTimeField(auto_now_add=True)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acknowledged_alerts', to=settings.AUTH_USER_MODEL)),
                ('alert_rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_alerts', to='website.alertrule')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_alerts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Alerta de Riesgo',
                'verbose_name_plural': 'Alertas de Riesgo',
                'ordering': ['-triggered_at'],
            },
        ),
        migrations.CreateModel(
            name='AlertNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification'), ('in_app', 'In-App')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('sent', 'Enviado'), ('delivered', 'Entregado'), ('failed', 'Falló')], default='pending', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_notifications', to=settings.AUTH_USER_MODEL)),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='website.riskalert')),
            ],
            options={
                'verbose_name': 'Notificación de Alerta',
                'verbose_name_plural': 'Notificaciones de Alerta',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='alertrule',
            name='risk_factors',
            field=models.ManyToManyField(blank=True, related_name='alert_rules', to='website.riskfactor'),
        ),
        migrations.CreateModel(
            name='TreatmentCase',
            fields=[
                ('id_case', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID Caso')),
                ('folio_hospitalizacion', models.CharField(max_length=50, unique=True, verbose_name='Folio de Hospitalización')),
                ('diagnostico_inicial', models.TextField(blank=True, verbose_name='Diagnóstico Inicial')),
                ('activo', models.BooleanField(default=True, verbose_name='Caso Activo')),
                ('fecha_ingreso', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Ingreso')),
                ('fecha_alta', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Alta')),
                ('codigo_barras', models.ImageField(blank=True, null=True, upload_to='codigos_barra/%Y/%m/', verbose_name='Código de Barras')),
                ('medico_responsable', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='treatment_cases_responsable', to=settings.AUTH_USER_MODEL, verbose_name='Médico Responsable')),
                ('medicos_secundarios', models.ManyToManyField(blank=True, related_name='treatment_cases_secundarios', to=settings.AUTH_USER_MODEL, verbose_name='Médicos Secundarios')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatment_cases', to='website.patient', verbose_name='Paciente')),
            ],
            options={
                'verbose_name': 'Caso de Tratamiento',
                'verbose_name_plural': 'Casos de Tratamiento',
                'ordering': ['-fecha_ingreso'],
            },
        ),
        migrations.AddField(
            model_name='riskalert',
            name='treatment_case',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='website.treatmentcase'),
        ),
        migrations.CreateModel(
            name='PreSurgeryForm',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('fecha_reporte', models.DateField(default=django.utils.timezone.now, verbose_name='Fecha de Reporte')),
                ('medico_tratante', models.CharField(max_length=100, verbose_name='Médico Tratante')),
                ('diagnostico_preoperatorio', models.TextField(verbose_name='Diagnóstico Preoperatorio')),
                ('peso', models.FloatField(verbose_name='Peso (kg)')),
                ('talla', models.FloatField(verbose_name='Talla (cm)')),
                ('imc', models.FloatField(blank=True, null=True, verbose_name='IMC')),
                ('estado_fisico_asa', models.IntegerField(choices=[(1, 'I'), (2, 'II'), (3, 'III'), (4, 'IV'), (5, 'V'), (6, 'VI')], verbose_name='Estado Físico ASA')),
                ('comorbilidades', models.TextField(blank=True, verbose_name='Comorbilidades')),
                ('medicamentos', models.TextField(blank=True, verbose_name='Medicamentos')),
                ('ayuno_hrs', models.FloatField(verbose_name='Ayuno (hrs)')),
                ('uso_glp1', models.BooleanField(default=False, verbose_name='Uso de GLP1')),
                ('dosis_glp1', models.CharField(blank=True, max_length=50, verbose_name='Dosis GLP1')),
                ('alergias', models.TextField(blank=True, verbose_name='Alergias')),
                ('tabaquismo', models.BooleanField(default=False, verbose_name='Tabaquismo')),
                ('antecedentes_dificultad', models.BooleanField(default=False, verbose_name='Antecedentes de Dificultad de Manejo')),
                ('descripcion_dificultad', models.TextField(blank=True, verbose_name='Descripción de Dificultad')),
                ('evaluacion_preoperatoria', models.TextField(verbose_name='Evaluación Preoperatoria')),
                ('estudios_radiologicos_va', models.ImageField(blank=True, upload_to='estudios_radiologicos/', verbose_name='Estudios Radiológicos VA')),
                ('uso_usg_gastrico', models.BooleanField(default=False, verbose_name='Uso de USG Gástrico')),
                ('usg_gastrico_ml', models.FloatField(blank=True, null=True, verbose_name='USG Gástrico (ml)')),
                ('imagen_usg_gastrico', models.ImageField(blank=True, upload_to='usg_gastrico/', verbose_name='Imagen USG Gástrico')),
                ('fc', models.IntegerField(verbose_name='FC')),
                ('ta', models.CharField(max_length=20, verbose_name='TA')),
                ('spo2_aire', models.IntegerField(verbose_name='SpO2 Aire Ambiente')),
                ('spo2_oxigeno', models.IntegerField(verbose_name='SpO2 con Oxígeno')),
                ('glasgow', models.IntegerField(validators=[django.core.validators.MinValueValidator(3), django.core.validators.MaxValueValidator(15)], verbose_name='Glasgow')),
                ('mallampati', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='Mallampati')),
                ('patil_aldrete', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='Patil-Aldrete')),
                ('distancia_inter_incisiva', models.FloatField(verbose_name='Distancia Inter-incisiva (cm)')),
                ('distancia_tiro_mentoniana', models.FloatField(verbose_name='Distancia Tiro-mentoniana (cm)')),
                ('protrusion_mandibular', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='Protrusión Mandibular')),
                ('macocha', models.IntegerField(verbose_name='Macocha')),
                ('stop_bang', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(8)], verbose_name='Stop Bang')),
                ('desviacion_traquea', models.FloatField(verbose_name='Desviación de la Tráquea (cm)')),
                ('problemas_deglucion', models.BooleanField(default=False, verbose_name='Problemas de Deglución')),
                ('estridor_laringeo', models.BooleanField(default=False, verbose_name='Estridor Laríngeo')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('treatment_case', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pre_surgery_form', to='website.treatmentcase', verbose_name='Caso de Tratamiento')),
            ],
            options={
                'verbose_name': 'Formulario Pre-Quirúrgico',
                'verbose_name_plural': 'Formularios Pre-Quirúrgicos',
                'ordering': ['-fecha_reporte'],
            },
        ),
        migrations.CreateModel(
            name='PostDuringSurgeryForm',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('lugar_problema', models.CharField(max_length=200, verbose_name='Lugar o Área del Problema')),
                ('presencia_anestesiologo', models.BooleanField(verbose_name='Presencia de Anestesiólogo')),
                ('tecnica_utilizada', models.CharField(max_length=200, verbose_name='Técnica Utilizada')),
                ('carro_via_aerea', models.BooleanField(verbose_name='Carro de Vía Aérea Difícil Disponible')),
                ('tipo_video_laringoscopia', models.CharField(blank=True, max_length=100, verbose_name='Tipo de Video-laringoscopía')),
                ('video_laringoscopia', models.FileField(blank=True, upload_to='video_laringoscopia/', verbose_name='Video de Laringoscopía')),
                ('clasificacion_han', models.IntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4')], validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4)], verbose_name='Clasificación HAN')),
                ('aditamento_via_aerea', models.CharField(max_length=200, verbose_name='Aditamento de Vía Aérea')),
                ('tiempo_preoxigenacion', models.IntegerField(verbose_name='Tiempo de Pre-oxigenación (minutos)')),
                ('uso_supraglotico', models.BooleanField(verbose_name='Uso de Supraglótico')),
                ('tipo_supraglotico', models.CharField(blank=True, max_length=100, verbose_name='Tipo de Supraglótico')),
                ('problemas_supragloticos', models.TextField(blank=True, verbose_name='Problemas con Supraglóticos')),
                ('tipo_intubacion', models.CharField(max_length=100, verbose_name='Tipo de Intubación')),
                ('numero_intentos', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Número de Intentos')),
                ('laringoscopia_directa', models.TextField(verbose_name='Laringoscopía Directa')),
                ('cormack', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='Cormack')),
                ('pogo', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='POGO (%)')),
                ('intubacion_tecnica_mixta', models.CharField(blank=True, max_length=200, verbose_name='Intubación Técnica Mixta')),
                ('intubacion_despierto', models.BooleanField(verbose_name='Intubación Despierto')),
                ('descripcion_intubacion_despierto', models.TextField(blank=True, verbose_name='Descripción Intubación Despierto')),
                ('tipo_anestesia', models.CharField(max_length=200, verbose_name='Tipo de Anestesia')),
                ('sedacion', models.CharField(max_length=200, verbose_name='Sedación')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones')),
                ('cooperacion_paciente', models.CharField(max_length=200, verbose_name='Cooperación del Paciente')),
                ('algoritmo_no_intubacion', models.BooleanField(default=False, verbose_name='Algoritmo No Intubación')),
                ('crico_tiroidotomia', models.BooleanField(default=False, verbose_name='Crico-tiroidotomía')),
                ('traqueostomia_percutanea', models.BooleanField(default=False, verbose_name='Traqueostomía Percutánea')),
                ('complicaciones', models.TextField(blank=True, verbose_name='Complicaciones')),
                ('resultado_final', models.TextField(verbose_name='Resultado Final')),
                ('fotos_videos', models.FileField(blank=True, upload_to='fotos_videos_cirugia/', verbose_name='Fotos o Videos Relacionados')),
                ('morbilidad', models.BooleanField(default=False)),
                ('descripcion_morbilidad', models.TextField(blank=True, verbose_name='Descripción Morbilidad')),
                ('mortalidad', models.BooleanField(default=False)),
                ('descripcion_mortalidad', models.TextField(blank=True, verbose_name='Descripción Mortalidad')),
                ('nombre_anestesiologo', models.CharField(max_length=200, verbose_name='Nombre del Anestesiólogo')),
                ('cedula_profesional', models.CharField(max_length=50, verbose_name='Cédula Profesional')),
                ('especialidad', models.CharField(max_length=100, verbose_name='Especialidad')),
                ('nombre_residente', models.CharField(blank=True, max_length=200, verbose_name='Nombre del Residente')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pre_surgery_form', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='post_surgery_form', to='website.presurgeryform', verbose_name='Formulario Pre-Quirúrgico')),
                ('treatment_case', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='post_surgery_form', to='website.treatmentcase', verbose_name='Caso de Tratamiento')),
            ],
            options={
                'verbose_name': 'Formulario Post-Quirúrgico',
                'verbose_name_plural': 'Formularios Post-Quirúrgicos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PatientRiskProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('airway_risk_score', models.FloatField(blank=True, null=True)),
                ('cardiovascular_risk_score', models.FloatField(blank=True, null=True)),
                ('respiratory_risk_score', models.FloatField(blank=True, null=True)),
                ('overall_risk_score', models.FloatField(blank=True, null=True)),
                ('difficult_airway_probability', models.FloatField(blank=True, null=True)),
                ('complication_probability', models.FloatField(blank=True, null=True)),
                ('last_calculated', models.DateTimeField(auto_now=True)),
                ('calculation_version', models.CharField(default='1.0', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('identified_risk_factors', models.ManyToManyField(blank=True, related_name='patient_profiles', to='website.riskfactor')),
                ('treatment_case', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='risk_profile', to='website.treatmentcase')),
            ],
            options={
                'verbose_name': 'Perfil de Riesgo del Paciente',
                'verbose_name_plural': 'Perfiles de Riesgo de Pacientes',
            },
        ),
        migrations.AddIndex(
            model_name='treatmentcase',
            index=models.Index(fields=['folio_hospitalizacion'], name='website_tre_folio_h_de4bb1_idx'),
        ),
        migrations.AddIndex(
            model_name='treatmentcase',
            index=models.Index(fields=['patient', 'activo'], name='website_tre_patient_c9c553_idx'),
        ),
        migrations.AddIndex(
            model_name='treatmentcase',
            index=models.Index(fields=['medico_responsable', 'fecha_ingreso'], name='website_tre_medico__0ef6a5_idx'),
        ),
        migrations.AddIndex(
            model_name='riskalert',
            index=models.Index(fields=['treatment_case', 'status'], name='website_ris_treatme_905606_idx'),
        ),
        migrations.AddIndex(
            model_name='riskalert',
            index=models.Index(fields=['alert_type', 'status'], name='website_ris_alert_t_d4ebdd_idx'),
        ),
        migrations.AddIndex(
            model_name='riskalert',
            index=models.Index(fields=['triggered_at'], name='website_ris_trigger_5d14bd_idx'),
        ),
    ]
